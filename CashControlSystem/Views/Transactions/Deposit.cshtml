@model CashControlSystem.Models.TransactionViewModel

@{
    ViewBag.Title = "Deposit Transaction";
}

<div class="container-fluid">
    <div class="row">
        <!-- left column -->
        <div class="col-md-12">
            <!-- general form elements -->
            <div class="card card-primary">
                <div class="card-header">
                    <h3 class="card-title">Deposit Transaction</h3>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                @using (Html.BeginForm("Deposit", "Transactions", FormMethod.Post, new { id = "depositForm" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="card-body">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CustomerCode)
                            @Html.TextBoxFor(model => model.CustomerCode, new { @class = "form-control", placeholder = "Enter Customer ID", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.CustomerCode, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Currency)
                            @Html.DropDownListFor(model => model.Currency,
                                new List<SelectListItem>
                                {
                                    new SelectListItem { Value = "IDR", Text = "Indonesian Rupiah (IDR)" },
                                    new SelectListItem { Value = "USD", Text = "US Dollar (USD)" },
                                },
                                "-- Select Currency --",
                                new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Amount)
                            @Html.TextBoxFor(model => model.Amount, new { @class = "form-control", placeholder = "Enter Amount" })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.BankPIC)
                            @Html.TextBoxFor(model => model.BankPIC, new { @class = "form-control", placeholder = "Enter Bank PIC" })
                            @Html.ValidationMessageFor(model => model.BankPIC, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <!-- /.card-body -->

                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary">Deposit</button>
                    </div>
                }
                <!-- /.card-footer -->
            </div>
            <!-- /.card -->
        </div>
        <!--/.col (left) -->
    </div>
    <!-- /.row -->
</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <script>
        $(document).ready(function () {
            $('#depositForm').submit(function (e) {
                e.preventDefault();

                var formData = $(this).serialize();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("Deposit", "Transactions")',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Transaction Status',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '@Url.Action("Index", "Home")';
                                }
                            });
                        } else {
                            Swal.fire({
                                title: 'Transaction Status',
                                text: response.message,
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Error',
                            text: 'An error occurred while processing your request.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });
            });
        });
    </script>
}
